/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grp6OOPR212;

import java.awt.Dimension;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author jmallari
 */
public class evaluatedEvents extends javax.swing.JFrame {
    DefaultTableModel dm;
    Connection con;
    Statement stmt,stmt2,stmt3,stmt4,stmt5;
    ResultSet rs,rs3;
    int curRow = 0;
    String evtCode,sql;//for selection of event
    String org,activity,date,venue;
    
    public evaluatedEvents() {
        initComponents();
        DoConnect();
        fetch();
        
    }
    
    
    public void fetch(){
         DefaultTableModel model = new DefaultTableModel(new String[]{"ORGNAME", "ACTIVITY", "DATE","VENUE","EVTCODE"}, 0);
        try {
             //to display ratings of table
           stmt3 =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
           String evtCodeSQL = "Select * FROM TBLEVENTS WHERE EVALUATED = true";
           rs3 = stmt3.executeQuery(evtCodeSQL);
          
               while(rs3.next()){
                String d = rs3.getString("ORGNAME");
                String e = rs3.getString("ACTIVITY");
                String f = rs3.getString("DATE");
                String g = rs3.getString("VENUE");
                String h = rs3.getString("EVTCODE");
                model.addRow(new Object[]{d, e, f,g,h});
                tblPastEvents.setModel(model);
           }
           
           //close statements
             stmt3.close();
            rs3.close();
        }catch (SQLException err) {
            JOptionPane.showMessageDialog(null, err+"Fetch Error");
            
        }
    }
        
    
     public void DoConnect() {

        try {

            //connect to the database
            String host = "jdbc:derby://localhost:1527/dbSEE";
            String uName = "group6";
            String uPass = "oopr212123";
            con = DriverManager.getConnection(host, uName, uPass);

        } catch (SQLException err1) {
            JOptionPane.showMessageDialog(this,err1+"Do Connect() Error");
        }
        
        //autocommit to save any changes to sql automatically
        try{
            con.setAutoCommit(true);
        }
        catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPastEvents = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(619, 560));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SEARCH EVENT:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 70, 90, 20);

        txtsearch.setOpaque(false);
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsearchKeyTyped(evt);
            }
        });
        getContentPane().add(txtsearch);
        txtsearch.setBounds(120, 70, 315, 20);

        tblPastEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ORGANIZATION", "ACTIVITY", "DATE", "VENUE"
            }
        ));
        tblPastEvents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPastEventsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPastEvents);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 100, 572, 402);

        btnPrint.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnPrint.setText("PRINT REPORT");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrint);
        btnPrint.setBounds(460, 70, 120, 23);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grp6OOPR212/auqna.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(20, 20, 50, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grp6OOPR212/7db70f43414483.png"))); // NOI18N
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 0, 620, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyPressed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        //get text and same time convert to lowercase
        String query = txtsearch.getText().toLowerCase();
        DefaultTableModel model2 = new DefaultTableModel(new String[]{"ORGNAME", "ACTIVITY", "DATE","VENUE","EVTCODE"}, 0);
        
        try {

            //lower() converts the contents of column to lowercase
            //this will make it easier to match with the search query without case sensitivity
            stmt =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery(" select * from TBLEVENTS where EVALUATED = true and lower(Activity) like '%" + query +  "%'");
            //move cursor to the first record and get data
           // DefaultTableModel tm = (DefaultTableModel) tblPastEvents.getModel();
            //tm.setRowCount(0);
            //tblPastEvents.setModel(DbUtils.resultSetToTableModel(rs));
            
           
               while(rs.next()){
                String d = rs.getString("ORGNAME");
                String e = rs.getString("ACTIVITY");
                String f = rs.getString("DATE");
                String g = rs.getString("VENUE");
                String h = rs.getString("EVTCODE");
                model2.addRow(new Object[]{d, e, f,g,h});
                tblPastEvents.setModel(model2);
           }
           
           //close statements
             stmt.close();
            rs.close();
            
        } catch (SQLException err) {
            JOptionPane.showMessageDialog(this,err+"txtsearch key released error");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyTyped

    private void tblPastEventsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPastEventsMouseClicked
        // TODO add your handling code here:
        // get the model from the jtable
        DefaultTableModel model = (DefaultTableModel)tblPastEvents.getModel();
        //get index of clicked row

        int selectedRowIndex = tblPastEvents.getSelectedRow();

        //get Id of selection
        evtCode = model.getValueAt(selectedRowIndex, 4).toString();//0 here refers to column 0 aka ID column

        org = model.getValueAt(selectedRowIndex, 0).toString();//0 here
        activity = model.getValueAt(selectedRowIndex, 1).toString();//0 here
        date = model.getValueAt(selectedRowIndex, 2).toString();//0 here
        venue = model.getValueAt(selectedRowIndex, 3).toString();//0 here
    }//GEN-LAST:event_tblPastEventsMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
//get details of event to be printed for the subreport      
//transfer data of selected table to the printRating table
try{
    stmt4 = con.createStatement();
    String sql4 = "Update TBLEVENTS set toprint = true where evtcode = '"+evtCode+"'";


            stmt4.executeUpdate(sql4);
            
             System.out.println("Transferred");
             stmt4.close();
}
catch(SQLException err){
    System.out.println(err);
}
      try{
    stmt5 = con.createStatement();
    String transferSQL = "INSERT INTO printrating SELECT * FROM "+ evtCode +"";


            stmt5.executeUpdate(transferSQL);
            
             System.out.println("Transferred");
             stmt5.close();
}
catch(SQLException err){
    System.out.println(err);
}

try{
    InputStream in = new FileInputStream(new File("C:\\Users\\jmallari\\Documents\\NetBeansProjects\\04192020WDESIGN\\SEE04182020\\SEE042020\\eventEvaluation\\src\\grp6OOPR212\\evaluation_report2.jrxml"));
    JasperDesign jd= JRXmlLoader.load(in);
    JasperReport jr = JasperCompileManager.compileReport(jd);
    HashMap hashmap = new HashMap();
    JasperPrint jp = JasperFillManager.fillReport(jr, hashmap,con);
    JasperViewer.viewReport(jp, false);
    OutputStream os = new FileOutputStream(new File("D:\\Reports"));
    JasperExportManager.exportReportToPdfStream(jp,os);
    
    
            
}catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}

//delete the table contents after printing
try{
    stmt5 =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
           String sql5 = "DELETE FROM PRINTRATING";
           stmt5.executeUpdate(sql5);
           System.out.println("Print table emptied");
           stmt5.close();
}
catch(SQLException err){
    System.out.println(err);
}

//turn off toPrint
try{
    stmt4 = con.createStatement();
    String sql4 = "Update TBLEVENTS set toprint = false where evtcode = '"+evtCode+"' and toprint = true";


            stmt4.executeUpdate(sql4);
            
             System.out.println("Transferred");
             stmt4.close();
}
catch(SQLException err){
    System.out.println(err);
}

/*try{
            //location of your report file
            String reportName = "C:\\Users\\jmallari\\Documents\\NetBeansProjects\\SEE042020\\eventEvaluation\\src\\grp6OOPR212\\Evaluation_report.jrxml";
            JasperReport is = JasperCompileManager.compileReport(reportName);
            JasperPrint jp = JasperFillManager.fillReport(is, new HashMap(),con);            
            JasperViewer.viewReport(jp);            
        }
        //catch for JasperReport errors
        catch(JRException ex){
            System.out.println(ex.getMessage());            
        }*/
        

/*try {
//Path to your .jasper file in your package
String reportName = "C:\\Users\\jmallari\\Documents\\NetBeansProjects\\SEE042020\\eventEvaluation\\src\\grp6OOPR212\\evaluation_report.jasper";
//Get a stream to read the file
InputStream is = this.getClass().getClassLoader().getResourceAsStream(reportName);

//Fill the report with parameter, connection and the stream reader
JasperPrint jp = JasperFillManager.fillReport(is, null, con);

//Viewer for JasperReport
net.sf.jasperreports.swing.JRViewer jv = new net.sf.jasperreports.swing.JRViewer(jp);
//Insert viewer to a JFrame to make it showable
JFrame jf = new JFrame();
jf.getContentPane().add(jv);
jf.validate();
jf.setVisible(true);
jf.setSize(new Dimension(1024,768));
jf.setLocation(1,1);
jf.setExtendedState(JFrame.MAXIMIZED_BOTH);
jf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
}catch(JRException ex){
 System.out.println(ex+"JRException");
} 
catch(Exception err){
   err.printStackTrace();
}                
//delete the table contents after printing
try{
    stmt5 =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
           SQL = "DELETE FROM PRINTRATING";
           stmt5.executeQuery(SQL);
}
catch(SQLException err){
    System.out.println(err);
}*/




    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new adminMenu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(evaluatedEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(evaluatedEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(evaluatedEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(evaluatedEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new evaluatedEvents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPastEvents;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
