/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grp6OOPR212;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import static java.util.Locale.filter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lenovo Flex2
 */
public class search extends javax.swing.JFrame {
    DefaultTableModel dm;
    Connection con;
    Statement stmt,stmt2,stmt3;
    ResultSet rs,rs3;
    int curRow = 0;
    String selectedevtCode;//for selection of event
    String org,activity,date,venue;
    

    PreparedStatement pst = null;

    /**
     * Creates new form search
     */
    public search() {
        initComponents();
        DoConnect();
        fetch();
           
    }
        public void fetch() {
       DefaultTableModel model = new DefaultTableModel(new String[]{"Org. Name", "Activity", "Date","Venue","Event Code"}, 0);
            
        try {
             //to display ratings of table
           stmt3 =  con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_UPDATABLE);
           //System.out.println(evtCode);
           String evtCodeSQL = "Select * FROM tblevents where evaluated = false";
           rs3 = stmt3.executeQuery(evtCodeSQL);
           while(rs3.next())
{
    String d = rs3.getString("ORGNAME");
    String e = rs3.getString("ACTIVITY");
    String f = rs3.getString("DATE");
    String g = rs3.getString("VENUE");
    String h = rs3.getString("EVTCODE");
    

    model.addRow(new Object[]{d, e, f,g,h});
    table.setModel(model);

        }} catch (Exception err) {
            JOptionPane.showMessageDialog(null, err+"No Events to Evaluate. Create a new event.");

        }
    }

    public void DoConnect() {

        try {

            //connect to the database
            String host = "jdbc:derby://localhost:1527/dbSEE";
            String uName = "group6";
            String uPass = "oopr212123";
            con = DriverManager.getConnection(host, uName, uPass);

            //execute some sql
            //stmt = con.createStatement();
            stmt = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);

            String SQL = "SELECT * FROM TBLEVENTS";
            rs = stmt.executeQuery(SQL);
            
            

        } catch (SQLException err1) {
            JOptionPane.showMessageDialog(this,err1+"Do Connect() Error");
        }
        
        //autocommit to save any changes to sql automatically
        try{
            con.setAutoCommit(true);
        }
        catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnEvaluate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 570));
        getContentPane().setLayout(null);

        txtsearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtsearch.setOpaque(false);
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtsearchKeyTyped(evt);
            }
        });
        getContentPane().add(txtsearch);
        txtsearch.setBounds(40, 90, 400, 23);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ORGANIZATION", "ACTIVITY", "DATE", "VENUE"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 130, 572, 402);

        btnEvaluate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEvaluate.setText("Evaluate");
        btnEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluateActionPerformed(evt);
            }
        });
        getContentPane().add(btnEvaluate);
        btnEvaluate.setBounds(470, 90, 138, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SEARCH EVENT:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 70, 101, 17);

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grp6OOPR212/auqna.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(20, 20, 50, 40);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/grp6OOPR212/7db70f43414483.png"))); // NOI18N
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 0, 650, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyPressed

    private void txtsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyTyped

    
    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        //get text and same time convert to lowercase 
        String query = txtsearch.getText().toLowerCase();
        DefaultTableModel model2 = new DefaultTableModel(new String[]{"Org. Name", "Activity", "Date","Venue","Event Code"}, 0);
         try {
             
             //lower() converts the contents of column to lowercase
             //this will make it easier to match with the search query without case sensitivity
             
             

            rs = stmt.executeQuery(" select * from TBLEVENTS where lower(Activity) like '%" + query +  "%' and evaluated = false");
            //move cursor to the first record and get data
            while(rs.next())
{
    String d = rs.getString("ORGNAME");
    String e = rs.getString("ACTIVITY");
    String f = rs.getString("DATE");
    String g = rs.getString("VENUE");
    String h = rs.getString("EVTCODE");
    

    model2.addRow(new Object[]{d, e, f,g,h});
    table.setModel(model2);
          
        }} catch (SQLException err) {
                JOptionPane.showMessageDialog(this,err+"txtsearch key released error");
        }  // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyReleased

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
         // get the model from the jtable
       DefaultTableModel model = (DefaultTableModel)table.getModel();
        //get index of clicked row
        
         int selectedRowIndex = table.getSelectedRow();
         
         //get Id of selection
         selectedevtCode = model.getValueAt(selectedRowIndex, 4).toString();//0 here refers to column 0 aka ID column
          
           
           org = model.getValueAt(selectedRowIndex, 0).toString();//0 here
           activity = model.getValueAt(selectedRowIndex, 1).toString();//0 here
           date = model.getValueAt(selectedRowIndex, 2).toString();//0 here
           venue = model.getValueAt(selectedRowIndex, 3).toString();//0 here
         /*try{ 
             //select info from the selected record
         String SQL = "Select * FROM GROUP6.TBLEVENTS WHERE EVTCODE= '"+selectedevtCode+"'";
           rs = stmt.executeQuery(SQL);
           rs.next();//move to the first record
           String org,activity,date,venue;
           
           org = rs.getString("ORGNAME");
           activity = rs.getString("ACTIVITY");
           date = String.valueOf(rs.getDate("DATE"));
           venue = rs.getString("VENUE");
           */
//confirm dialog box summarizing selection
           
    //}//TRY
    /*    
    catch(SQLException err){
           System.out.println(err.getMessage()); 
        }
  */
    }//GEN-LAST:event_tableMouseClicked

    private void btnEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluateActionPerformed
        int ans = JOptionPane.showConfirmDialog(this, "Evaluate this event?\n"+"Activity: "
                   +activity+"\nOrganization: "+org+"\nDate: "+date+"\nVenue: "+venue
                   , "CONFIRM EVENT SELECTION",
      JOptionPane.YES_NO_CANCEL_OPTION,
      JOptionPane.WARNING_MESSAGE);
      if(ans == 0){
         //System.out.println("Pressed YES");
         //activate event in tableevent
        try{
          stmt2 = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
         String SQL = "UPDATE TBLEVENTS SET activate = true WHERE EVTCODE= '"+selectedevtCode+"'";
         stmt2.executeUpdate(SQL);
         JOptionPane.showMessageDialog(this,"Evaluation for "+activity+" activated successfully");
         stmt2.close();
         this.setVisible(false);
        }
        
        catch (SQLException err) {
                JOptionPane.showMessageDialog(this,err);
                        }  // 
        
           
           
           
         //add a new row in tblReports
         
      } else if (ans == 1) {
         System.out.println("Pressed NO");
      } else {
         System.out.println("Pressed CANCEL");
      }
           
    
           btnEvaluate.setEnabled(true);
           
           //back to menu
           new adminMenu().setVisible(true);
    }//GEN-LAST:event_btnEvaluateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        new adminMenu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEvaluate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
